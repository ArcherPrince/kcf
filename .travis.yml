language: c++
addons:
  apt:
    sources: &common_sources
      - sourceline: deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /
        key_url: http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.8
    packages: &common_packages
      - cmake
      - ninja-build
      - libopencv-dev
      - libfftw3-dev

env:
  - CUDA_BIN_PATH=/usr/local/cuda-8.0 CXXFLAGS=-Werror CUDA_ARCH_LIST=6.2 NINJA_STATUS="[%f/%t] "

script: make

matrix:
  include:
    - compiler: gcc-5
      addons:
        apt:
          sources: *common_sources
          packages:
            - *common_packages
            - g++-5
            - cuda-command-line-tools-8-0 cuda-cufft-dev-8-0 cuda-cublas-dev-8-0
      script: make CC=gcc-5 CXX=g++-5
    - compiler: clang-3.8
      addons:
        apt:
          sources: *common_sources
          packages:
            - *common_packages
            - clang-3.8
            - cuda-command-line-tools-8-0 cuda-cufft-dev-8-0 cuda-cublas-dev-8-0
      script: make CC=clang-3.8 CXX=clang++-3.8 $(make print_BUILDS|grep -v openmp)
    - compiler: clang
      name: clang & test
      script:
        - make BUILDS="$(make print_BUILDS|grep -v cufft|paste -s)"
        - LD_LIBRARY_PATH=/usr/local/clang-5.0.0/lib/ ninja test
      addons:
        apt: { sources: *common_sources, packages: [*common_packages, unzip] }

before_cache: rm -f vot2016/*/{output.txt,core}
cache:
  directories: [ vot2016 ]
